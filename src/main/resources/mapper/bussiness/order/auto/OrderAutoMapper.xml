<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.essential.bussiness.order.dao.OrderAutoMapper" >
  <resultMap id="BaseResultMap" type="com.essential.bussiness.order.model.auto.OrderAuto" >
    <id column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="order_number" property="orderNumber" jdbcType="VARCHAR" />
    <result column="pay_number" property="payNumber" jdbcType="VARCHAR" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="buyer_note" property="buyerNote" jdbcType="VARCHAR" />
    <result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
    <result column="external_order_number" property="externalOrderNumber" jdbcType="VARCHAR" />
    <result column="pay_serial_number" property="paySerialNumber" jdbcType="VARCHAR" />
    <result column="order_product_id" property="orderProductId" jdbcType="VARCHAR" />
    <result column="shop_id" property="shopId" jdbcType="BIGINT" />
    <result column="final_price" property="finalPrice" jdbcType="DECIMAL" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="is_comment" property="isComment" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="freight" property="freight" jdbcType="DECIMAL" />
    <result column="zipcode" property="zipcode" jdbcType="VARCHAR" />
    <result column="addresse" property="addresse" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="VARCHAR" />
    <result column="modify_user_id" property="modifyUserId" jdbcType="BIGINT" />
    <result column="return_refund_count" property="returnRefundCount" jdbcType="INTEGER" />
    <result column="return_refund_identification" property="returnRefundIdentification" jdbcType="INTEGER" />
    <result column="attr1" property="attr1" jdbcType="VARCHAR" />
    <result column="attr2" property="attr2" jdbcType="VARCHAR" />
    <result column="attr3" property="attr3" jdbcType="VARCHAR" />
    <result column="attr4" property="attr4" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
    <result column="main_order_amount" property="mainOrderAmount" jdbcType="DECIMAL" />
    <result column="coupon_flag" property="couponFlag" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="OrderProductVoResultMap" extends="BaseResultMap" type="com.essential.bussiness.order.model.vo.OrderProductVo" >
    <result column="order_status_item_id" property="orderStatusItemId" jdbcType="INTEGER" />
    <result column="order_status_item_name" property="orderStatusItemName" jdbcType="VARCHAR" />
    <result column="user_nickname" property="userNickname" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="logo_path" property="logoPath" jdbcType="VARCHAR" />
    <result column="order_product_count" property="orderProductCount" jdbcType="INTEGER" />
    <result column="logistic_number" property="logisticNumber" jdbcType="VARCHAR" />
    <result column="logistics_company" property="logistic" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="OrderShopInfoResultMap" type="com.essential.bussiness.order.model.vo.QueryOrderCommentVo">
  	<result column="order_id" property="orderId" jdbcType="BIGINT" />
  	<result column="shopName" property="shopName" jdbcType="VARCHAR" />
  	<result column="shop_id" property="shopId" jdbcType="BIGINT" />
  	 <result column="logo_path" property="logoPath" jdbcType="VARCHAR" />  	
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, order_number, pay_number, order_status, buyer_note, total_price, external_order_number, 
    pay_serial_number, order_product_id, shop_id, final_price, is_delete, is_comment, 
    user_id, pay_type, address, freight, zipcode, addresse, user_phone, modify_time, 
    modify_user_id,return_refund_count,return_refund_identification,attr1,attr2,attr3,attr4,create_time,
    coupon_amount,main_order_amount,coupon_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.essential.bussiness.order.model.auto.OrderAutoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_bussiness_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_bussiness_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_bussiness_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.essential.bussiness.order.model.auto.OrderAutoExample" >
    delete from t_bussiness_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="orderId"  parameterType="com.essential.bussiness.order.model.auto.OrderAuto" >
    insert into t_bussiness_order (order_id, order_number, pay_number, 
      order_status, buyer_note, total_price, 
      external_order_number, pay_serial_number, order_product_id, 
      shop_id, final_price, is_delete, 
      is_comment, user_id, pay_type, 
      address, freight, zipcode, 
      addresse, user_phone, modify_time, 
      modify_user_id,return_refund_count,return_refund_identification,
      attr1,attr2,attr3,attr4, create_time,coupon_amount,main_order_amount,coupon_flag)
    values (#{orderId,jdbcType=BIGINT}, #{orderNumber,jdbcType=VARCHAR}, #{payNumber,jdbcType=VARCHAR}, 
      #{orderStatus,jdbcType=INTEGER}, #{buyerNote,jdbcType=VARCHAR}, #{totalPrice,jdbcType=DECIMAL}, 
      #{externalOrderNumber,jdbcType=VARCHAR}, #{paySerialNumber,jdbcType=VARCHAR}, #{orderProductId,jdbcType=VARCHAR}, 
      #{shopId,jdbcType=BIGINT}, #{finalPrice,jdbcType=DECIMAL}, #{isDelete,jdbcType=INTEGER}, 
      #{isComment,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{payType,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{freight,jdbcType=DECIMAL}, #{zipcode,jdbcType=VARCHAR}, 
      #{addresse,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, 
      #{modifyUserId,jdbcType=BIGINT},#{returnRefundCount,jdbcType=INTEGER},#{returnRefundIdentification,jdbcType=INTEGER},
      #{attr1,jdbcType=VARCHAR},#{attr2,jdbcType=VARCHAR},#{attr3,jdbcType=VARCHAR},
      #{attr4,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR},#{couponAmount,jdbcType=DECIMAL},
      #{mainOrderAmount,jdbcType=DECIMAL}, #{couponFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.essential.bussiness.order.model.auto.OrderAuto" >
    insert into t_bussiness_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderNumber != null" >
        order_number,
      </if>
      <if test="payNumber != null" >
        pay_number,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="buyerNote != null" >
        buyer_note,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="externalOrderNumber != null" >
        external_order_number,
      </if>
      <if test="paySerialNumber != null" >
        pay_serial_number,
      </if>
      <if test="orderProductId != null" >
        order_product_id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="finalPrice != null" >
        final_price,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="isComment != null" >
        is_comment,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="freight != null" >
        freight,
      </if>
      <if test="zipcode != null" >
        zipcode,
      </if>
      <if test="addresse != null" >
        addresse,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifyUserId != null" >
        modify_user_id,
      </if>
      <if test="returnRefundCount != null" >
        return_refund_count,
      </if>
      <if test="returnRefundIdentification != null" >
        return_refund_identification,
      </if>
      <if test="attr1 != null" >
        attr1,
      </if>
      <if test="attr2 != null" >
        attr2,
      </if>
      <if test="attr3 != null" >
        attr3,
      </if>
      <if test="attr4 != null" >
        attr4,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="couponAmount != null" >
        coupon_amount,
      </if>
      <if test="mainOrderAmount != null" >
        main_order_amount,
      </if>
      <if test="couponFlag != null" >
        coupon_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="payNumber != null" >
        #{payNumber,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="buyerNote != null" >
        #{buyerNote,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="externalOrderNumber != null" >
        #{externalOrderNumber,jdbcType=VARCHAR},
      </if>
      <if test="paySerialNumber != null" >
        #{paySerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="orderProductId != null" >
        #{orderProductId,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="finalPrice != null" >
        #{finalPrice,jdbcType=DECIMAL},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="isComment != null" >
        #{isComment,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="freight != null" >
        #{freight,jdbcType=DECIMAL},
      </if>
      <if test="zipcode != null" >
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="addresse != null" >
        #{addresse,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserId != null" >
        #{modifyUserId,jdbcType=BIGINT},
      </if>
      <if test="returnRefundCount != null" >
        #{returnRefundCount,jdbcType=INTEGER},
      </if>
      <if test="returnRefundIdentification != null" >
        #{returnRefundIdentification,jdbcType=INTEGER},
      </if>
      <if test="attr1 != null" >
        #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null" >
        #{attr2,jdbcType=VARCHAR},
      </if>
      <if test="attr3 != null" >
        #{attr3,jdbcType=VARCHAR},
      </if>
      <if test="attr4 != null" >
        #{attr4,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="couponAmount != null" >
        #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="mainOrderAmount != null" >
        #{mainOrderAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponFlag != null" >
        #{couponFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.essential.bussiness.order.model.auto.OrderAutoExample" resultType="java.lang.Integer" >
    select count(*) from t_bussiness_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_bussiness_order
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderNumber != null" >
        order_number = #{record.orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.payNumber != null" >
        pay_number = #{record.payNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.buyerNote != null" >
        buyer_note = #{record.buyerNote,jdbcType=VARCHAR},
      </if>
      <if test="record.totalPrice != null" >
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.externalOrderNumber != null" >
        external_order_number = #{record.externalOrderNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.paySerialNumber != null" >
        pay_serial_number = #{record.paySerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.orderProductId != null" >
        order_product_id = #{record.orderProductId,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.finalPrice != null" >
        final_price = #{record.finalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.isComment != null" >
        is_comment = #{record.isComment,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.freight != null" >
        freight = #{record.freight,jdbcType=DECIMAL},
      </if>
      <if test="record.zipcode != null" >
        zipcode = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.addresse != null" >
        addresse = #{record.addresse,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhone != null" >
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserId != null" >
        modify_user_id = #{record.modifyUserId,jdbcType=BIGINT},
      </if>
      <if test="record.returnRefundCount != null" >
        return_refund_count = #{record.returnRefundCount,jdbcType=INTEGER},
      </if>
      <if test="record.returnRefundIdentification != null" >
        return_refund_identification = #{record.returnRefundIdentification,jdbcType=INTEGER},
      </if>
      <if test="record.attr1 != null" >
        attr1 = #{record.attr1,jdbcType=VARCHAR},
      </if>
      <if test="record.attr2 != null" >
        attr2 = #{record.attr2,jdbcType=VARCHAR},
      </if>
      <if test="record.attr3 != null" >
        attr3 = #{record.attr3,jdbcType=VARCHAR},
      </if>
      <if test="record.attr4 != null" >
        attr4 = #{record.attr4,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.couponAmount != null" >
        coupon_amount = #{record.couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.mainOrderAmount != null" >
        main_order_amount = #{record.mainOrderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.couponFlag != null" >
        coupon_flag = #{record.couponFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_bussiness_order
    set order_id = #{record.orderId,jdbcType=BIGINT},
      order_number = #{record.orderNumber,jdbcType=VARCHAR},
      pay_number = #{record.payNumber,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      buyer_note = #{record.buyerNote,jdbcType=VARCHAR},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      external_order_number = #{record.externalOrderNumber,jdbcType=VARCHAR},
      pay_serial_number = #{record.paySerialNumber,jdbcType=VARCHAR},
      order_product_id = #{record.orderProductId,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      final_price = #{record.finalPrice,jdbcType=DECIMAL},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      is_comment = #{record.isComment,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      pay_type = #{record.payType,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      freight = #{record.freight,jdbcType=DECIMAL},
      zipcode = #{record.zipcode,jdbcType=VARCHAR},
      addresse = #{record.addresse,jdbcType=VARCHAR},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=VARCHAR},
      modify_user_id = #{record.modifyUserId,jdbcType=BIGINT},
      return_refund_count = #{record.returnRefundCount,jdbcType=INTEGER},
      return_refund_identification = #{record.returnRefundIdentification,jdbcType=INTEGER},
      attr1 = #{record.attr1,jdbcType=VARCHAR},
      attr2 = #{record.attr2,jdbcType=VARCHAR},
      attr3 = #{record.attr3,jdbcType=VARCHAR},
      attr4 = #{record.attr4,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      coupon_amount = #{record.couponAmount,jdbcType=DECIMAL},
      main_order_amount = #{record.mainOrderAmount,jdbcType=DECIMAL},
      coupon_flag = #{record.couponFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.essential.bussiness.order.model.auto.OrderAuto" >
    update t_bussiness_order
    <set >
      <if test="orderNumber != null" >
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="payNumber != null" >
        pay_number = #{payNumber,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="buyerNote != null" >
        buyer_note = #{buyerNote,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="externalOrderNumber != null" >
        external_order_number = #{externalOrderNumber,jdbcType=VARCHAR},
      </if>
      <if test="paySerialNumber != null" >
        pay_serial_number = #{paySerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="orderProductId != null" >
        order_product_id = #{orderProductId,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="finalPrice != null" >
        final_price = #{finalPrice,jdbcType=DECIMAL},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="isComment != null" >
        is_comment = #{isComment,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="freight != null" >
        freight = #{freight,jdbcType=DECIMAL},
      </if>
      <if test="zipcode != null" >
        zipcode = #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="addresse != null" >
        addresse = #{addresse,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserId != null" >
        modify_user_id = #{modifyUserId,jdbcType=BIGINT},
      </if>
      <if test="returnRefundCount != null" >
        return_refund_count = #{returnRefundCount,jdbcType=INTEGER},
      </if>
      <if test="returnRefundCount != null" >
        return_refund_identification = #{returnRefundIdentification,jdbcType=INTEGER},
      </if>
      <if test="attr1 != null" >
        attr1 = #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null" >
        attr2 = #{attr2,jdbcType=VARCHAR},
      </if>
      <if test="attr3 != null" >
        attr3 = #{attr3,jdbcType=VARCHAR},
      </if>
      <if test="attr4 != null" >
        attr4 = #{attr4,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="couponAmount != null" >
        coupon_amount = #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="mainOrderAmount != null" >
        main_order_amount = #{mainOrderAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponFlag != null" >
        coupon_flag = #{couponFlag,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.essential.bussiness.order.model.auto.OrderAuto" >
    update t_bussiness_order
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      pay_number = #{payNumber,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=INTEGER},
      buyer_note = #{buyerNote,jdbcType=VARCHAR},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      external_order_number = #{externalOrderNumber,jdbcType=VARCHAR},
      pay_serial_number = #{paySerialNumber,jdbcType=VARCHAR},
      order_product_id = #{orderProductId,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=BIGINT},
      final_price = #{finalPrice,jdbcType=DECIMAL},
      is_delete = #{isDelete,jdbcType=INTEGER},
      is_comment = #{isComment,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      pay_type = #{payType,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      freight = #{freight,jdbcType=DECIMAL},
      zipcode = #{zipcode,jdbcType=VARCHAR},
      addresse = #{addresse,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=VARCHAR},
      modify_user_id = #{modifyUserId,jdbcType=BIGINT},
      return_refund_count = #{returnRefundCount,jdbcType=INTEGER},
      return_refund_identification = #{returnRefundIdentification,jdbcType=INTEGER},
      attr1 = #{attr1,jdbcType=VARCHAR},
      attr2 = #{attr2,jdbcType=VARCHAR},
      attr3 = #{attr3,jdbcType=VARCHAR},
      attr4 = #{attr4,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      coupon_amount = #{couponAmount,jdbcType=DECIMAL},
      main_order_amount = #{mainOrderAmount,jdbcType=DECIMAL},
      coupon_flag = #{couponFlag,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  
  <select id="selectOrderForList" parameterType="com.essential.bussiness.order.model.vo.OrderProductVo" resultMap="OrderProductVoResultMap">
  	select a.order_id, a.order_number, a.pay_number, a.order_status, a.buyer_note, a.total_price, 
		  	a.external_order_number, a.pay_serial_number, a.order_product_id, a.shop_id, a.final_price,
		  	a.is_delete, a.is_comment, a.user_id, a.pay_type, a.address, a.freight, a.zipcode, a.addresse,
		  	a.user_phone, a.modify_time, a.modify_user_id, a.return_refund_count, a.return_refund_identification,
		  	a.attr1, a.attr2, a.attr3, a.attr4, c.order_status_item_name, c.order_status_item_id, u.user_nickname,
		  	s.`name`,s.logo_path,sum(op.product_count) as order_product_count,ol.logistics_company,ol.logistic_number,
		  	a.create_time
    	from t_bussiness_order a
				LEFT JOIN t_bussiness_order_status_item c
							on a.order_status = c.order_status_item_id
				LEFT JOIN t_user_userbaseinfo u
							on a.user_id = u.user_id
				LEFT JOIN t_bussiness_shop s
							on a.shop_id = s.shop_id
				LEFT JOIN t_bussiness_order_product op
							on a.order_id = op.order_id
				LEFT JOIN t_bussiness_order_logistic ol
							on a.order_id = ol.order_id
	<where>
		<if test="orderId != null and orderId != ''" >
	       and a.order_id =  #{orderId,jdbcType=BIGINT}
        </if>
        <if test="productName != null and productName != ''" >
	       and op.product_name like "%"#{productName,jdbcType=VARCHAR}"%"
        </if>
		<if test="orderNumber != null and orderNumber != ''" >
        	and a.order_number like #{orderNumber,jdbcType=VARCHAR}"%"
      	</if>
      	<if test="externalOrderNumber != null and externalOrderNumber!= ''" >
        	and a.external_order_number = #{externalOrderNumber,jdbcType=VARCHAR}
      	</if>
		<if test="shopId != null">
			and a.shop_id = #{shopId,jdbcType=BIGINT}
		</if>
		<if test="userId != null">
			and a.user_id = #{userId,jdbcType=BIGINT}
		</if>
		<if test="isDelete != null and isDelete != ''" >
        	and a.is_delete = #{isDelete,jdbcType=INTEGER}
      	</if>
      	<if test="modifyStartTime != null and modifyStartTime != ''" >
        	<![CDATA[ and a.modify_time >= #{modifyStartTime,jdbcType=VARCHAR} ]]>
      	</if>
      	<if test="modifyEndTime != null and modifyEndTime != ''" >
        	<![CDATA[ and a.modify_time <= #{modifyEndTime,jdbcType=VARCHAR} ]]>
      	</if>
      	<if test="orderStatus != null and orderStatus != '' and orderStatus != 110 and orderStatus != 5" >
        	and a.order_status = #{orderStatus,jdbcType=INTEGER}
      	</if>
      	<if test="orderStatus == 5">
        	and (a.order_status = 5
        		or a.order_status = 0)
      	</if>
      	<if test="orderStatus == 110" >
        	and (a.order_status = 2
        		or a.order_status = 3)
      	</if>
      	<if test="userNickname != null and userNickname != ''">
      		and u.user_nickname like #{userNickname,jdbcType=VARCHAR}"%"
      	</if>
      	<if test="payType != null and payType != ''" >
	        and a.pay_type = #{payType,jdbcType=INTEGER}
	    </if>
	    <if test="name != null and name != ''" >
        	and s.name = #{name,jdbcType=VARCHAR}
      	</if>
      	<if test="isComment != null" >
        	and a.is_comment = #{isComment,jdbcType=INTEGER}
      	</if>
      	<if test="orderProducts != null and orderProducts != ''">
   			<foreach collection="orderProducts" item="orderProduct" separator=",">
   				<choose>
   					<when test="orderProduct.productName != null and orderProduct.productName != ''">
   						and op.product_name like "%"#{orderProduct.productName,jdbcType=VARCHAR}"%"
   					</when>
   				</choose>
   			</foreach>
   		</if>
	</where>
	GROUP BY a.order_id ORDER BY a.modify_time DESC
	<if test="pageNo != null and pageCount != null">
		LIMIT #{pageNo},#{pageCount}
	</if>
  </select>
  
  <select id="selectOrderForListCount" parameterType="com.essential.bussiness.order.model.vo.OrderProductVo" resultType="java.lang.Integer">
  	select count(DISTINCT a.order_id)
    	from t_bussiness_order a
				LEFT JOIN t_bussiness_order_status_item c
							on a.order_status = c.order_status_item_id
				LEFT JOIN t_user_userbaseinfo u
							on a.user_id = u.user_id
				LEFT JOIN t_bussiness_shop s
							on a.shop_id = s.shop_id
				LEFT JOIN t_bussiness_order_product op
							on a.order_id = op.order_id
	<where>
		<if test="orderId != null and orderId != ''" >
	       and a.order_id =  #{orderId,jdbcType=BIGINT}
        </if>
        <if test="productName != null and productName != ''" >
	       and op.product_name like "%"#{productName,jdbcType=VARCHAR}"%"
        </if>
		<if test="orderNumber != null and orderNumber != ''" >
        	and a.order_number like #{orderNumber,jdbcType=VARCHAR}"%"
      	</if>
      	<if test="externalOrderNumber != null and externalOrderNumber!= ''" >
        	and a.external_order_number = #{externalOrderNumber,jdbcType=VARCHAR}
      	</if>
		<if test="shopId != null">
			and a.shop_id = #{shopId,jdbcType=BIGINT}
		</if>
		<if test="userId != null">
			and a.user_id = #{userId,jdbcType=BIGINT}
		</if>
		<if test="isDelete != null and isDelete != ''" >
        	and a.is_delete = #{isDelete,jdbcType=INTEGER}
      	</if>
      	<if test="modifyStartTime != null and modifyStartTime != ''" >
        	<![CDATA[ and a.modify_time >= #{modifyStartTime,jdbcType=VARCHAR} ]]>
      	</if>
      	<if test="modifyEndTime != null and modifyEndTime != ''" >
        	<![CDATA[ and a.modify_time <= #{modifyEndTime,jdbcType=VARCHAR} ]]>
      	</if>
      	<if test="orderStatus != null and orderStatus != '' and orderStatus != 110 and orderStatus != 5" >
        	and a.order_status = #{orderStatus,jdbcType=INTEGER}
      	</if>
      	<if test="orderStatus == 5">
        	and (a.order_status = 5
        		or a.order_status = 0)
      	</if>
      	<if test="orderStatus == 110" >
        	and (a.order_status = 2
        		or a.order_status = 3)
      	</if>
      	<if test="userNickname != null and userNickname != ''">
      		and u.user_nickname like #{userNickname,jdbcType=VARCHAR}"%"
      	</if>
      	<if test="payType != null and payType != ''" >
	        and a.pay_type = #{payType,jdbcType=INTEGER}
	    </if>
	    <if test="name != null and name != ''" >
        	and s.name = #{name,jdbcType=VARCHAR}
      	</if>
      	<if test="isComment != null" >
        	and a.is_comment = #{isComment,jdbcType=INTEGER}
      	</if>
      	<if test="orderProducts != null and orderProducts != ''">
   			<foreach collection="orderProducts" item="orderProduct" separator=",">
   				<choose>
   					<when test="orderProduct.productName != null and orderProduct.productName != ''">
   						and op.product_name like "%"#{orderProduct.productName,jdbcType=VARCHAR}"%"
   					</when>
   				</choose>
   			</foreach>
   		</if>
	</where>
  </select>
  
  
   <!--   通过订单号获取totalFee start -->
  <select id="selectTotalFeeByOrderNum" resultMap="BaseResultMap" parameterType="String" >
    select 
    <include refid="Base_Column_List" />
    from t_bussiness_order
    where order_number =#{orderNumber,jdbcType=VARCHAR}
  </select>
  <!--通过订单号获取totalFee end -->
  
  
  <select id="queryOrderShopInfo" parameterType="java.lang.Long" resultMap="OrderShopInfoResultMap">
  	select a.order_id, a.shop_id,s.`name` as shopName,s.logo_path
    	from t_bussiness_order a
				LEFT JOIN t_bussiness_shop s
							on a.shop_id = s.shop_id
		<where>
			<if test="orderId != null and orderId != ''" >
	       		and a.order_id =  #{orderId,jdbcType=BIGINT}
        	</if>
		</where>	
  </select>
  
  <select id="queryMyOrderNumberPerLabelCount" resultType="map" parameterType="java.lang.Long">
  	select count(order_id) AS totalCount,
			 count(CASE WHEN order_status=1 THEN 1 END) AS pendingPaymentCount,
			 count(CASE WHEN order_status=2 OR order_status=3 THEN 1 END) AS waitReciveGoodsCount,
			 count(CASE WHEN order_status=4 AND is_comment = 0 THEN 1 END) AS waitEvaluateCount
		from t_bussiness_order where user_id = #{userId,jdbcType=BIGINT}
	UNION ALL
	select count(return_refund_order_id) AS totalCount,
				 0 AS pendingPaymentCount,
				 0 AS waitReciveGoodsCount,
				 0 AS waitEvaluateCount
		from t_bussiness_return_refund_order where user_id = #{userId,jdbcType=BIGINT}
  </select>
</mapper>