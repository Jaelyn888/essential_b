<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.essential.user.dao.UserCollectionAutoMapper">
	<resultMap id="BaseResultMap" type="com.essential.user.model.auto.UserCollectionAuto">
		<id column="collection_id" jdbcType="BIGINT" property="collectionId" />
		<result column="user_id" jdbcType="BIGINT" property="userId" />
		<result column="content_id" jdbcType="BIGINT" property="contentId" />
		<result column="collection_type" jdbcType="INTEGER" property="collectionType" />
		<result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
		<result column="create_time" jdbcType="VARCHAR" property="createTime" />
		<result column="modify_user_id" jdbcType="BIGINT" property="modifyUserId" />
		<result column="modify_time" jdbcType="VARCHAR" property="modifyTime" />
		<result column="is_delete" jdbcType="INTEGER" property="isDelete" />
	</resultMap>
	<sql id="Base_Column_List">
		collection_id, user_id, content_id, collection_type, create_user_id, create_time,
		modify_user_id, modify_time, is_delete
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user_collection
		where collection_id = #{collectionId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from t_user_collection
		where collection_id = #{collectionId,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.essential.user.model.auto.UserCollectionAuto">
		insert into t_user_collection (collection_id, user_id, content_id,
		collection_type, create_user_id, create_time,
		modify_user_id, modify_time, is_delete
		)
		values (#{collectionId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{contentId,jdbcType=BIGINT},
		#{collectionType,jdbcType=INTEGER}, #{createUserId,jdbcType=BIGINT}, #{createTime,jdbcType=VARCHAR},
		#{modifyUserId,jdbcType=BIGINT}, #{modifyTime,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.essential.user.model.auto.UserCollectionAuto">
		insert into t_user_collection
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="collectionId != null">
				collection_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="contentId != null">
				content_id,
			</if>
			<if test="collectionType != null">
				collection_type,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="modifyUserId != null">
				modify_user_id,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
			<if test="isDelete != null">
				is_delete,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="collectionId != null">
				#{collectionId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="contentId != null">
				#{contentId,jdbcType=BIGINT},
			</if>
			<if test="collectionType != null">
				#{collectionType,jdbcType=INTEGER},
			</if>
			<if test="createUserId != null">
				#{createUserId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=VARCHAR},
			</if>
			<if test="modifyUserId != null">
				#{modifyUserId,jdbcType=BIGINT},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=VARCHAR},
			</if>
			<if test="isDelete != null">
				#{isDelete,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.essential.user.model.auto.UserCollectionAuto">
		update t_user_collection
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="contentId != null">
				content_id = #{contentId,jdbcType=BIGINT},
			</if>
			<if test="collectionType != null">
				collection_type = #{collectionType,jdbcType=INTEGER},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=VARCHAR},
			</if>
			<if test="modifyUserId != null">
				modify_user_id = #{modifyUserId,jdbcType=BIGINT},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=VARCHAR},
			</if>
			<if test="isDelete != null">
				is_delete = #{isDelete,jdbcType=INTEGER},
			</if>
		</set>
		where collection_id = #{collectionId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.essential.user.model.auto.UserCollectionAuto">
		update t_user_collection
		set user_id = #{userId,jdbcType=BIGINT},
		content_id = #{contentId,jdbcType=BIGINT},
		collection_type = #{collectionType,jdbcType=INTEGER},
		create_user_id = #{createUserId,jdbcType=BIGINT},
		create_time = #{createTime,jdbcType=VARCHAR},
		modify_user_id = #{modifyUserId,jdbcType=BIGINT},
		modify_time = #{modifyTime,jdbcType=VARCHAR},
		is_delete = #{isDelete,jdbcType=INTEGER}
		where collection_id = #{collectionId,jdbcType=BIGINT}
	</update>


	<!-- 更新状态 -->
	<!-- <update id="updateByPrimaryKeySelective" parameterType="java.util.Map"> WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. update t_user_collection <set> <if test="userId != null"> user_id ='${userId}', </if> <if test="contentId != null"> content_id ='${contentId}', </if> <if test="collectionType != null"> collection_type ='${collectionType}', </if> <if test="createUserId != null"> create_user_id ='${createUserId}', </if> <if test="createTime != null"> create_time ='${createTime}', </if> <if test="modifyUserId != null"> modify_user_id ='${modifyUserId}', </if> <if test="modifyTime != null"> modify_time ='${modifyTime}', </if> <if test="isDelete != null"> is_delete = '${isDelete}', </if> </set> where collection_id = '${collectionId}' </update> -->

	<!-- 收藏相关商品 -->
	<resultMap id="CollectionProductMap" type="com.essential.bussiness.product.model.vo.ProductInfoWithPromotionVo">
		<result column="product_id" property="productId" jdbcType="BIGINT" />
		<result column="product_name" property="productName" jdbcType="VARCHAR" />
		<result column="path" property="path" jdbcType="VARCHAR" />
		<result column="cost_price" property="costPrice" jdbcType="DECIMAL" />
		<result column="market_price" property="marketPrice" jdbcType="DECIMAL" />
		<result column="brand_id" property="brandId" jdbcType="BIGINT" />
		<result column="brand_name" property="brandName" jdbcType="VARCHAR" />
		<result column="create_time" jdbcType="VARCHAR" property="createTime" />
		<result column="link_from" property="linkFrom" jdbcType="VARCHAR" />
		<result column="tag" property="tag" jdbcType="VARCHAR" />
		<result column="promotion_name" property="promotionName" jdbcType="VARCHAR" />
		<result column="start_time" property="startTime" jdbcType="VARCHAR" />
		<result column="end_time" property="endTime" jdbcType="VARCHAR" />
		<result column="is_validate" property="isValidate" jdbcType="INTEGER" />
		<result column="promotion_type" property="promotionType" jdbcType="INTEGER" />
		<result column="discount_percent" property="discountPercent" jdbcType="REAL" />
		<result column="discount_money" property="discountMoney" jdbcType="DECIMAL" />
		<result column="need_total_price" property="needTotalPrice" jdbcType="DECIMAL" />
		<result column="is_multistage" property="isMultistage" jdbcType="INTEGER" />
	</resultMap>
	<select id="queryProductList" parameterType="com.essential.user.model.auto.UserCollectionAuto" resultMap="CollectionProductMap">
		select collection.create_time, product.product_id,product.product_name,product.cost_price,product.market_price,product.link_from,
		brand.brand_id,brand.brand_name,pic.path,
		pc.promotion_type,
		pc.discount_percent,
		pc.discount_money,
		pc.need_total_price,
		pc.is_multistage,
		pc.tag,
		pc.is_validate,
		pc.promotion_name,
		pc.start_time,
		pc.end_time
	FROM
		t_user_collection collection
	LEFT JOIN t_bussiness_product product ON collection.content_id = product.product_id
	LEFT JOIN t_bussiness_brand brand ON product.brand_id = brand.brand_id
	LEFT JOIN t_bussiness_productpic pic ON product.product_id = pic.product_id
	AND pic.mainpic = 1
	AND pic.STATUS = 0
	LEFT JOIN (SELECT promotion_product.promotion_type,
		promotion_product.discount_percent,
		promotion_product.discount_money,
		promotion_product.need_total_price,
		promotion_product.is_multistage,
		promotion.tag,
		promotion.is_validate,
		promotion.promotion_name,
		promotion.start_time,
		promotion.end_time,
		promotion_product.product_or_shop_id FROM t_bussiness_promotion_product promotion_product,t_bussiness_promotion promotion 
	WHERE promotion_product.promotion_id = promotion.promotion_id 
			AND (promotion_product.is_validate = 0)
			AND (promotion.is_validate = 0)
			AND (promotion.is_delelte = 0)
			<![CDATA[ AND (
				unix_timestamp(promotion.start_time) <= unix_timestamp(now())
			)
			AND (
				unix_timestamp(promotion.end_time) >= unix_timestamp(now())
			) ]]>) pc
		ON product.product_id = pc.product_or_shop_id
		<where>
			<!-- 第一次请求 -->
			<!-- <if test="requestType == '0'.toString()"> </if> -->
			<!-- 刷新 -->
			<if test="requestType == '1'.toString() and createTime != null">
			<![CDATA[and collection.create_time > #{createTime,jdbcType=VARCHAR}]]>
			</if>
			<!-- 加载 -->
			<if test="requestType == '2'.toString() and createTime != null">
			<![CDATA[and collection.create_time < #{createTime,jdbcType=VARCHAR}]]>
			</if>

			<if test="userId != null">
				and collection.user_id = #{userId,jdbcType=BIGINT}
			</if>

			<if test="collectionType != null">
				and collection.collection_type = #{collectionType,jdbcType=INTEGER}
			</if>

			<if test="isDelete != null">
				and collection.is_delete = #{isDelete,jdbcType=INTEGER}
			</if>
		</where>

		ORDER BY collection.create_time DESC
		<if test="pageSize != null">
			limit #{pageSize,jdbcType=INTEGER}
		</if>
		<!-- <if test="pageSize == null">
			limit 12
		</if> -->

	</select>

	<!-- 收藏文章 -->
	<resultMap id="CollectionArticleVoMap" type="com.essential.find.model.vo.ArticleVo">
		<result column="article_id" property="articleId" jdbcType="BIGINT" />
		<result column="group_name" property="groupName" jdbcType="VARCHAR" />
		<result column="article_name" property="articleName" jdbcType="VARCHAR" />
		<result column="main_path" property="mainPath" jdbcType="VARCHAR" />
		<result column="readcount" property="readcount" jdbcType="BIGINT" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="author" property="author" jdbcType="VARCHAR" />
		<result column="author_icon" property="authorIcon" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 文章 -->
	<select id="queryArticleList" parameterType="com.essential.user.model.auto.UserCollectionAuto" resultMap="CollectionArticleVoMap">
		select collection_id,collection.create_time,
		article.article_id,article.article_name,article.main_path,article.readcount,
		article.send_time,
		article.author,
		article.author_icon,articleGroup.group_name

		from t_user_collection collection
		INNER JOIN t_find_article article ON collection.content_id = article.article_id
		LEFT JOIN t_find_article_group articleGroup ON article.article_group_id = articleGroup.article_group_id
		<where>
			<!-- 第一次请求 -->
			<!-- <if test="requestType == '0'.toString()"> </if> -->
			<!-- 刷新 -->
			<if test="requestType == '1'.toString() and createTime != null">
			<![CDATA[and collection.create_time > #{createTime,jdbcType=VARCHAR}]]>
			</if>
			<!-- 加载 -->
			<if test="requestType == '2'.toString() and createTime != null">
			<![CDATA[and collection.create_time < #{createTime,jdbcType=VARCHAR}]]>
			</if>

			<if test="userId != null">
				and collection.user_id = #{userId,jdbcType=BIGINT}
			</if>

			<if test="collectionType != null">
				and collection.collection_type = #{collectionType,jdbcType=INTEGER}
			</if>

			<if test="isDelete != null">
				and collection.is_delete = #{isDelete,jdbcType=INTEGER}
			</if>
		</where>

		ORDER BY collection.create_time DESC
		<if test="pageSize != null">
			limit #{pageSize,jdbcType=INTEGER}
		</if>
		<if test="pageSize == null">
			limit 12
		</if>
	</select>

	<!-- 收藏品牌 查询 -->
	<resultMap id="CollectionBrandBaseInfoVo" type="com.essential.user.model.vo.CollectionBrandInfoVo">
		<result column="brand_id" property="brandId" jdbcType="BIGINT" />
		<result column="brand_name" property="brandName" jdbcType="VARCHAR" />
		<result column="logo_path" property="logoPath" jdbcType="VARCHAR" />
		<result column="page_desc" property="pageDesc" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
	</resultMap>

	<select id="queryBrandList" parameterType="com.essential.user.model.auto.UserCollectionAuto" resultMap="CollectionBrandBaseInfoVo">
		select collection_id,collection.create_time,
		brand_id,brand_name,page_desc,logo_path
		from t_user_collection collection
		INNER JOIN t_bussiness_brand brand ON collection.content_id = brand.brand_id
		<where>
			<!-- 第一次请求 -->
			<!-- <if test="requestType == '0'.toString()"> </if> -->
			<!-- 刷新 -->
			<if test="requestType == '1'.toString() and createTime != null">
			<![CDATA[and collection.create_time > #{createTime,jdbcType=VARCHAR}]]>
			</if>
			<!-- 加载 -->
			<if test="requestType == '2'.toString() and createTime != null">
			<![CDATA[and collection.create_time < #{createTime,jdbcType=VARCHAR}]]>
			</if>

			<if test="userId != null">
				and collection.user_id = #{userId,jdbcType=BIGINT}
			</if>

			<if test="collectionType != null">
				and collection.collection_type = #{collectionType,jdbcType=INTEGER}
			</if>

			<if test="isDelete != null">
				and collection.is_delete = #{isDelete,jdbcType=INTEGER}
			</if>
		</where>

		ORDER BY collection.create_time DESC
		<if test="pageSize != null">
			limit #{pageSize,jdbcType=INTEGER}
		</if>
		<if test="pageSize == null">
			limit 12
		</if>
	</select>
	<!-- 查询总数量 -->
	<select id="queryCount" parameterType="com.essential.user.model.auto.UserCollectionAuto" resultType="java.lang.Integer">
		select count(1) as count  from t_user_collection
		<where>
			<if test="userId != null">
				and user_id = #{userId,jdbcType=BIGINT}
			</if>
			<if test="contentId != null">
				and content_id = #{contentId,jdbcType=BIGINT}
			</if>
			<if test="collectionType != null">
				and collection_type = #{collectionType,jdbcType=INTEGER}
			</if>
			<if test="isDelete != null">
				and is_delete = #{isDelete,jdbcType=INTEGER}
			</if>
		</where>
	</select>

	<!-- 分页请求信息 -->
	<select id="selectByParamSelective" parameterType="com.essential.user.model.auto.UserCollectionAuto" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user_collection
		<where>
			<!-- 第一次请求 -->
			<!-- <if test="requestType == '0'.toString()"> </if> -->
			<!-- 刷新 -->
			<if test="requestType == '1'.toString() and createTime != null">
			<![CDATA[and create_time > #{createTime,jdbcType=VARCHAR}]]>
			</if>
			<!-- 加载 -->
			<if test="requestType == '2'.toString() and createTime != null">
			<![CDATA[and create_time < #{createTime,jdbcType=VARCHAR}]]>
			</if>

			<if test="userId != null">
				and user_id = #{userId,jdbcType=BIGINT}
			</if>
			<if test="contentId != null">
				and content_id = #{contentId,jdbcType=BIGINT}
			</if>
			<if test="collectionType != null">
				and collection_type = #{collectionType,jdbcType=INTEGER}
			</if>

			<if test="isDelete != null">
				and is_delete = #{isDelete,jdbcType=INTEGER}
			</if>
		</where>
		ORDER BY create_time DESC
		<if test="pageSize != null">
			limit #{pageSize,jdbcType=INTEGER}
		</if>

	</select>


</mapper>