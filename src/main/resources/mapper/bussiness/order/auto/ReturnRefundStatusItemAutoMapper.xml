<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.essential.bussiness.order.dao.ReturnRefundStatusItemAutoMapper" >
  <resultMap id="BaseResultMap" type="com.essential.bussiness.order.model.auto.ReturnRefundStatusItemAuto" >
    <id column="return_refund_status_item_id" property="returnRefundStatusItemId" jdbcType="INTEGER" />
    <result column="return_refund_status_item_name" property="returnRefundStatusItemName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="mofify_user" property="mofifyUser" jdbcType="BIGINT" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    return_refund_status_item_id, return_refund_status_item_name, create_time, modify_time, 
    create_user, mofify_user, is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.essential.bussiness.order.model.auto.ReturnRefundStatusItemAutoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_bussiness_return_refund_status_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_bussiness_return_refund_status_item
    where return_refund_status_item_id = #{returnRefundStatusItemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_bussiness_return_refund_status_item
    where return_refund_status_item_id = #{returnRefundStatusItemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.essential.bussiness.order.model.auto.ReturnRefundStatusItemAutoExample" >
    delete from t_bussiness_return_refund_status_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.essential.bussiness.order.model.auto.ReturnRefundStatusItemAuto" >
    insert into t_bussiness_return_refund_status_item (return_refund_status_item_id, return_refund_status_item_name, 
      create_time, modify_time, create_user, 
      mofify_user, is_delete)
    values (#{returnRefundStatusItemId,jdbcType=INTEGER}, #{returnRefundStatusItemName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{modifyTime,jdbcType=VARCHAR}, #{createUser,jdbcType=BIGINT}, 
      #{mofifyUser,jdbcType=BIGINT}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.essential.bussiness.order.model.auto.ReturnRefundStatusItemAuto" >
    insert into t_bussiness_return_refund_status_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="returnRefundStatusItemId != null" >
        return_refund_status_item_id,
      </if>
      <if test="returnRefundStatusItemName != null" >
        return_refund_status_item_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="mofifyUser != null" >
        mofify_user,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="returnRefundStatusItemId != null" >
        #{returnRefundStatusItemId,jdbcType=INTEGER},
      </if>
      <if test="returnRefundStatusItemName != null" >
        #{returnRefundStatusItemName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="mofifyUser != null" >
        #{mofifyUser,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.essential.bussiness.order.model.auto.ReturnRefundStatusItemAutoExample" resultType="java.lang.Integer" >
    select count(*) from t_bussiness_return_refund_status_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_bussiness_return_refund_status_item
    <set >
      <if test="record.returnRefundStatusItemId != null" >
        return_refund_status_item_id = #{record.returnRefundStatusItemId,jdbcType=INTEGER},
      </if>
      <if test="record.returnRefundStatusItemName != null" >
        return_refund_status_item_name = #{record.returnRefundStatusItemName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.mofifyUser != null" >
        mofify_user = #{record.mofifyUser,jdbcType=BIGINT},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_bussiness_return_refund_status_item
    set return_refund_status_item_id = #{record.returnRefundStatusItemId,jdbcType=INTEGER},
      return_refund_status_item_name = #{record.returnRefundStatusItemName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      mofify_user = #{record.mofifyUser,jdbcType=BIGINT},
      is_delete = #{record.isDelete,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.essential.bussiness.order.model.auto.ReturnRefundStatusItemAuto" >
    update t_bussiness_return_refund_status_item
    <set >
      <if test="returnRefundStatusItemName != null" >
        return_refund_status_item_name = #{returnRefundStatusItemName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="mofifyUser != null" >
        mofify_user = #{mofifyUser,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where return_refund_status_item_id = #{returnRefundStatusItemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.essential.bussiness.order.model.auto.ReturnRefundStatusItemAuto" >
    update t_bussiness_return_refund_status_item
    set return_refund_status_item_name = #{returnRefundStatusItemName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      mofify_user = #{mofifyUser,jdbcType=BIGINT},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where return_refund_status_item_id = #{returnRefundStatusItemId,jdbcType=INTEGER}
  </update>
</mapper>