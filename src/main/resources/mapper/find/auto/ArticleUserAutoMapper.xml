<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.essential.find.dao.ArticleUserAutoMapper">
	<resultMap id="BaseResultMap" type="com.essential.find.model.auto.ArticleUserAuto">
		<id column="articleuser_id" property="articleuserId" jdbcType="BIGINT" />
		<result column="article_id" property="articleId" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="modify_user_id" property="modifyUserId" jdbcType="BIGINT" />
		<result column="modify_time" property="modifyTime" jdbcType="VARCHAR" />
		<result column="is_delete" property="isDelete" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		articleuser_id, article_id, user_id, is_delete, create_user_id, create_time, modify_user_id,
		modify_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from t_find_article_user
		where articleuser_id = #{articleuserId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from t_find_article_user
		where articleuser_id = #{articleuserId,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.essential.find.model.auto.ArticleUserAuto">
		insert into t_find_article_user (articleuser_id, article_id, user_id,
		is_delete, create_user_id, create_time,
		modify_user_id, modify_time)
		values (#{articleuserId,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
		#{createUserId,jdbcType=BIGINT}, #{createTime,jdbcType=VARCHAR}, #{modifyUserId,jdbcType=BIGINT},
		#{modifyTime,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.essential.find.model.auto.ArticleUserAuto">
		insert into t_find_article_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="articleuserId != null">
				articleuser_id,
			</if>
			<if test="articleId != null">
				article_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="isDelete != null">
				is_delete,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="modifyUserId != null">
				modify_user_id,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="articleuserId != null">
				#{articleuserId,jdbcType=BIGINT},
			</if>
			<if test="articleId != null">
				#{articleId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="createUserId != null">
				#{createUserId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=VARCHAR},
			</if>
			<if test="modifyUserId != null">
				#{modifyUserId,jdbcType=BIGINT},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=VARCHAR},
			</if>
			<if test="isDelete != null">
				#{isDelete,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.essential.find.model.auto.ArticleUserAuto">
		update t_find_article_user
		<set>
			
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=VARCHAR},
			</if>
			<if test="modifyUserId != null">
				modify_user_id = #{modifyUserId,jdbcType=BIGINT},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=VARCHAR},
			</if>
			<if test="isDelete != null">
				is_delete = #{isDelete,jdbcType=INTEGER},
			</if>
		</set>
		where article_id = #{articleId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.essential.find.model.auto.ArticleUserAuto">
		update t_find_article_user
		set article_id = #{articleId,jdbcType=BIGINT},
		user_id = #{userId,jdbcType=BIGINT},
		create_user_id = #{createUserId,jdbcType=BIGINT},
		create_time = #{createTime,jdbcType=VARCHAR},
		modify_user_id = #{modifyUserId,jdbcType=BIGINT},
		modify_time = #{modifyTime,jdbcType=VARCHAR},
		is_delete = #{isDelete,jdbcType=INTEGER}
		where articleuser_id = #{articleuserId,jdbcType=BIGINT}
	</update>


	<!-- 批量插入相关用户 -->
	<insert id="insertList" parameterType="com.essential.find.model.auto.ArticleAuto">
		insert into t_find_article_user (article_id, user_id,
		is_delete, create_user_id, create_time,
		modify_user_id, modify_time)
		values
		<foreach collection="articleUserAutoList" item="item" index="" separator="," open="" close="">
			( #{articleId,jdbcType=BIGINT}, #{item.userId,jdbcType=BIGINT},
			#{createUserId,jdbcType=BIGINT}, #{createTime,jdbcType=VARCHAR}, #{modifyUserId,jdbcType=BIGINT},
			#{modifyTime,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER})
		</foreach>
	</insert>


	<select id="queryUserIdList" resultMap="BaseResultMap" parameterType="com.essential.find.model.auto.ArticleProductAuto">
		select
		<include refid="Base_Column_List" />
		from t_find_article_user
		where article_id = #{userId,jdbcType=BIGINT} limit 0,10
	</select>

</mapper>