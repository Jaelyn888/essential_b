<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.essential.bussiness.order.dao.OrderPayAutoMapper" >
  <resultMap id="BaseResultMap" type="com.essential.bussiness.order.model.auto.OrderPayAuto" >
    <id column="order_pay_id" property="orderPayId" jdbcType="BIGINT" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="order_trade_number" property="orderTradeNumber" jdbcType="VARCHAR" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="VARCHAR" />
    <result column="mofify_user" property="mofifyUser" jdbcType="BIGINT" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="attr1" property="attr1" jdbcType="VARCHAR" />
    <result column="attr2" property="attr2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_pay_id, order_id, order_trade_number, pay_type, create_time, create_user, modify_time, 
    mofify_user, is_delete, attr1, attr2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.essential.bussiness.order.model.auto.OrderPayAutoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_bussiness_order_pay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_bussiness_order_pay
    where order_pay_id = #{orderPayId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_bussiness_order_pay
    where order_pay_id = #{orderPayId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.essential.bussiness.order.model.auto.OrderPayAutoExample" >
    delete from t_bussiness_order_pay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.essential.bussiness.order.model.auto.OrderPayAuto" >
    insert into t_bussiness_order_pay (order_pay_id, order_id, order_trade_number, 
      pay_type, create_time, create_user, 
      modify_time, mofify_user, is_delete, 
      attr1, attr2)
    values (#{orderPayId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{orderTradeNumber,jdbcType=VARCHAR}, 
      #{payType,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, #{createUser,jdbcType=BIGINT}, 
      #{modifyTime,jdbcType=VARCHAR}, #{mofifyUser,jdbcType=BIGINT}, #{isDelete,jdbcType=INTEGER}, 
      #{attr1,jdbcType=VARCHAR}, #{attr2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.essential.bussiness.order.model.auto.OrderPayAuto" >
    insert into t_bussiness_order_pay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderPayId != null" >
        order_pay_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderTradeNumber != null" >
        order_trade_number,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="mofifyUser != null" >
        mofify_user,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="attr1 != null" >
        attr1,
      </if>
      <if test="attr2 != null" >
        attr2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderPayId != null" >
        #{orderPayId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderTradeNumber != null" >
        #{orderTradeNumber,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="mofifyUser != null" >
        #{mofifyUser,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="attr1 != null" >
        #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null" >
        #{attr2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.essential.bussiness.order.model.auto.OrderPayAutoExample" resultType="java.lang.Integer" >
    select count(*) from t_bussiness_order_pay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_bussiness_order_pay
    <set >
      <if test="record.orderPayId != null" >
        order_pay_id = #{record.orderPayId,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderTradeNumber != null" >
        order_trade_number = #{record.orderTradeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.mofifyUser != null" >
        mofify_user = #{record.mofifyUser,jdbcType=BIGINT},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.attr1 != null" >
        attr1 = #{record.attr1,jdbcType=VARCHAR},
      </if>
      <if test="record.attr2 != null" >
        attr2 = #{record.attr2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_bussiness_order_pay
    set order_pay_id = #{record.orderPayId,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      order_trade_number = #{record.orderTradeNumber,jdbcType=VARCHAR},
      pay_type = #{record.payType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=VARCHAR},
      mofify_user = #{record.mofifyUser,jdbcType=BIGINT},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      attr1 = #{record.attr1,jdbcType=VARCHAR},
      attr2 = #{record.attr2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.essential.bussiness.order.model.auto.OrderPayAuto" >
    update t_bussiness_order_pay
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderTradeNumber != null" >
        order_trade_number = #{orderTradeNumber,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=VARCHAR},
      </if>
      <if test="mofifyUser != null" >
        mofify_user = #{mofifyUser,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="attr1 != null" >
        attr1 = #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null" >
        attr2 = #{attr2,jdbcType=VARCHAR},
      </if>
    </set>
    where order_pay_id = #{orderPayId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.essential.bussiness.order.model.auto.OrderPayAuto" >
    update t_bussiness_order_pay
    set order_id = #{orderId,jdbcType=BIGINT},
      order_trade_number = #{orderTradeNumber,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=VARCHAR},
      mofify_user = #{mofifyUser,jdbcType=BIGINT},
      is_delete = #{isDelete,jdbcType=INTEGER},
      attr1 = #{attr1,jdbcType=VARCHAR},
      attr2 = #{attr2,jdbcType=VARCHAR}
    where order_pay_id = #{orderPayId,jdbcType=BIGINT}
  </update>
</mapper>