<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.essential.bussiness.specification.dao.SpecificationleveloneAutoMapper" >
  <resultMap id="BaseResultMap" type="com.essential.bussiness.specification.model.auto.SpecificationleveloneAuto" >
    <id column="specification_id" property="specificationId" jdbcType="BIGINT" />
    <result column="level_one_name" property="levelOneName" jdbcType="VARCHAR" />
    <result column="aliasname" property="aliasname" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modify_user" property="modifyUser" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="level_two_is" property="levelTwoIs" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    specification_id, level_one_name, aliasname, is_deleted, create_time, create_user, 
    modify_time, modify_user, status, level_two_is
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.essential.bussiness.specification.model.auto.SpecificationleveloneAutoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_bussiness_specification_level_one
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_bussiness_specification_level_one
    where specification_id = #{specificationId,jdbcType=BIGINT}
  </select>
   <select id="selectall" parameterType="com.essential.bussiness.specification.model.auto.SpecificationleveloneAuto" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_bussiness_specification_level_one 
     <where>
      <if test="isDeleted != null" >
     and  is_deleted = #{isDeleted,jdbcType=INTEGER}
      </if>
    	 <if test="specificationId != null" >
     and specification_id = #{specificationId,jdbcType=BIGINT}
      </if>
      <if test="levelOneName != null" >
    and level_one_name = #{levelOneName,jdbcType=VARCHAR}
      </if>
      <if test="aliasname != null" >
      and  aliasname = #{aliasname,jdbcType=VARCHAR}
      </if>
      <if test="isDeleted != null" >
       and is_deleted = #{isDeleted,jdbcType=INTEGER}
      </if>
      <if test="createTime != null" >
       and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="createUser != null" >
       and create_user = #{createUser,jdbcType=BIGINT}
      </if>
      <if test="modifyTime != null" >
       and modify_time = #{modifyTime,jdbcType=TIMESTAMP}
      </if>
      <if test="modifyUser != null" >
       and modify_user = #{modifyUser,jdbcType=BIGINT}
      </if>
      <if test="status != null" >
       and status = #{status,jdbcType=INTEGER}
      </if>
      <if test="levelTwoIs != null" >
       and level_two_is = #{levelTwoIs,jdbcType=INTEGER}
      </if>  
    </where>
   
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_bussiness_specification_level_one
    where specification_id = #{specificationId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.essential.bussiness.specification.model.auto.SpecificationleveloneAutoExample" >
    delete from t_bussiness_specification_level_one
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.essential.bussiness.specification.model.auto.SpecificationleveloneAuto" >
    insert into t_bussiness_specification_level_one (specification_id, level_one_name, aliasname, 
      is_deleted, create_time, create_user, 
      modify_time, modify_user, status, 
      level_two_is)
    values (#{specificationId,jdbcType=BIGINT}, #{levelOneName,jdbcType=VARCHAR}, #{aliasname,jdbcType=VARCHAR}, 
      #{isDeleted,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{modifyUser,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, 
      #{levelTwoIs,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.essential.bussiness.specification.model.auto.SpecificationleveloneAuto" >
    insert into t_bussiness_specification_level_one
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="specificationId != null" >
        specification_id,
      </if>
      <if test="levelOneName != null" >
        level_one_name,
      </if>
      <if test="aliasname != null" >
        aliasname,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifyUser != null" >
        modify_user,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="levelTwoIs != null" >
        level_two_is,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="specificationId != null" >
        #{specificationId,jdbcType=BIGINT},
      </if>
      <if test="levelOneName != null" >
        #{levelOneName,jdbcType=VARCHAR},
      </if>
      <if test="aliasname != null" >
        #{aliasname,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null" >
        #{modifyUser,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="levelTwoIs != null" >
        #{levelTwoIs,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.essential.bussiness.specification.model.auto.SpecificationleveloneAutoExample" resultType="java.lang.Integer" >
    select count(*) from t_bussiness_specification_level_one
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_bussiness_specification_level_one
    <set >
      <if test="record.specificationId != null" >
        specification_id = #{record.specificationId,jdbcType=BIGINT},
      </if>
      <if test="record.levelOneName != null" >
        level_one_name = #{record.levelOneName,jdbcType=VARCHAR},
      </if>
      <if test="record.aliasname != null" >
        aliasname = #{record.aliasname,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyUser != null" >
        modify_user = #{record.modifyUser,jdbcType=BIGINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.levelTwoIs != null" >
        level_two_is = #{record.levelTwoIs,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_bussiness_specification_level_one
    set specification_id = #{record.specificationId,jdbcType=BIGINT},
      level_one_name = #{record.levelOneName,jdbcType=VARCHAR},
      aliasname = #{record.aliasname,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      modify_user = #{record.modifyUser,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      level_two_is = #{record.levelTwoIs,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.essential.bussiness.specification.model.auto.SpecificationleveloneAuto" >
    update t_bussiness_specification_level_one
    <set >
      <if test="levelOneName != null" >
        level_one_name = #{levelOneName,jdbcType=VARCHAR},
      </if>
      <if test="aliasname != null" >
        aliasname = #{aliasname,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null" >
        modify_user = #{modifyUser,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="levelTwoIs != null" >
        level_two_is = #{levelTwoIs,jdbcType=INTEGER},
      </if>
    </set>
    where specification_id = #{specificationId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.essential.bussiness.specification.model.auto.SpecificationleveloneAuto" >
    update t_bussiness_specification_level_one
    set level_one_name = #{levelOneName,jdbcType=VARCHAR},
      aliasname = #{aliasname,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_user = #{modifyUser,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      level_two_is = #{levelTwoIs,jdbcType=INTEGER}
    where specification_id = #{specificationId,jdbcType=BIGINT}
  </update>
  
  
  <select id="selectOneName" resultMap="BaseResultMap" parameterType="map" >
    select 
    
    <include refid="Base_Column_List" />
    from t_bussiness_specification_level_one b
    <where>
     <if test="specificationOneKey != null" >
       and   specification_id in  
       <foreach item="item" index="index" collection="specificationOneKey" open="(" separator="," close=")">  
  #{item}  
 </foreach>  
      </if>  
    </where>
   GROUP BY b.level_one_name
    
  </select>
</mapper>