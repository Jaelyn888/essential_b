<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
    destroy-method="close" >
    <property name="driverClassName">
      <value>${jdbc_driverClassName}</value>
    </property>
    <property name="url">
      <value>${jdbc_url}</value>
    </property>
    <property name="username">
      <value>${jdbc_username}</value>
    </property>
    <property name="password">
      <value>${jdbc_password}</value>
    </property>
    <!-- 连接池最大使用连接数 -->
    <property name="maxActive">
      <value>20</value>
    </property>
    <!-- 初始化连接大小 -->
    <property name="initialSize">
      <value>1</value>
    </property>
    <!-- 获取连接最大等待时间 -->
    <property name="maxWait">
      <value>60000</value>
    </property>
    <!-- 连接池最大空闲 -->
    <property name="maxIdle">
      <value>20</value>
    </property>
    <!-- 连接池最小空闲 -->
    <property name="minIdle">
      <value>3</value>
    </property>
    <!-- 自动清除无用连接 -->
    <property name="removeAbandoned">
      <value>true</value>
    </property>
    <!-- 清除无用连接的等待时间 -->
    <property name="removeAbandonedTimeout">
      <value>180</value>
    </property>
    <!-- 连接属性 -->
    <property name="connectionProperties">
      <value>clientEncoding=UTF-8</value>
    </property>
    <!-- 开启Druid的监控统计功能 --> 
    <property name="filters"><value>stat</value></property>
  </bean>
    
  <!-- configLocation为mybatis属性 mapperLocations为所有mapper-->
  <bean id="sqlSessionFactory"
      	  class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:configLocation="classpath:conf/mybatis-config.xml"
          p:mapperLocations="classpath:mapper/**/*.xml">
          <property name="plugins">
		    <array>
		     <bean class="com.github.pagehelper.PageHelper">
		        <property name="properties">
		          <value>
		            dialect=mysql
		            reasonable=true
		          </value>
		        </property>
		      </bean>
		      <bean class="com.github.abel533.mapperhelper.MapperInterceptor">
		        <property name="properties">
		          <!-- 属性一行一个，具体属性参考mybatis-config.xml中的属性 -->
		          <value>
		            mappers=com.essential.common.core.Mapper
		            notEmpty=true
		          </value>
		        </property>
		      </bean>
		    </array>
		  </property>
   </bean>
   
   <!-- sqlSession -->  
  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
  		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
  </bean>
          
   <!-- spring与mybatis整合配置，扫描所有dao -->
 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
        p:basePackage="com.essential.**.dao" 
        p:sqlSessionFactoryBeanName="sqlSessionFactory"/>
   <!-- sqlMapper -->     
   <bean id="sqlMapper" class="com.github.abel533.sql.SqlMapper">
   		<constructor-arg ref="sqlSession" ></constructor-arg>
   </bean>     
 
   <!-- 对数据源进行事务管理 -->
  <bean id="transactionManager" 
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
        p:dataSource-ref="dataSource"/>
  <tx:advice id="userTxAdvice" transaction-manager="transactionManager"> 
        <tx:attributes> 
            <tx:method name="get*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="query*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="find*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="load*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>  
   </tx:advice> 
   <aop:config> 
        <aop:pointcut id="pc" 
            expression="execution(* com.essential..*Service*.*(..))" /> 
             <!-- 把事务控制在service层 --> 
        <aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" /> 
   </aop:config>
  
</beans>