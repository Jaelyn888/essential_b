<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:task="http://www.springframework.org/schema/task"  
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd  
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    
    <!-- 扫描controller（controller层注入） -->
   <context:component-scan base-package="com.essential.**.controller"/>
   
   
   <!--  配置mvc的拦截器 可以配置多个 -->
<!--    <mvc:interceptors>
        <mvc:interceptor>
 -->           <!--  需要被拦截的路径 -->
 <!--           <mvc:mapping path="/member/**">
 -->
            <!-- 拦截处理的interceptor -->
    <!--        
            <bean class="com.cat.interceptor.MemberInterceptor">
        </bean></mvc:mapping></mvc:interceptor>
    </mvc:interceptors>
	-->
	
   	<task:annotation-driven scheduler="qbScheduler" mode="proxy"/>  

    <task:scheduler id="qbScheduler" pool-size="10"/>  

   <!-- 避免IE在ajax请求时，返回json出现下载 -->
   <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">		
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!--
	<bean id="login" class="com.essential.controller.LoginController">
		<property name="errorPage">
			<value>error.jsp</value>
		</property>
		
		<property name="successPage">
			<value>success.jsp</value>
		</property>
		
	</bean>
	
	-->
   <!-- 对模型视图添加前后缀 
     <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
      p:prefix="/WEB-INF/pages/" p:suffix=".html"/>
     --> 
      <!-- freemarker视图配置 -->
    
    <!-- freemarker ftl/xhtml viewResolver 配置 -->
	<bean  class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/pages/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="defaultEncoding">UTF-8</prop> <!-- 乱码 重点在这里 也可以改成gb2312-->
			</props>
		</property>
	</bean>
	
	<!-- ContentNegotiatingViewResolver视图解析器,利用他就可以配置多种返回值 -->
	 <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">   
	   <!-- 这里是否忽略掉accept header，默认就是false -->
	   <property name="ignoreAcceptHeader" value="true" />   
	   <!-- 如果所有的mediaType都没匹配上，就会使用defaultContentType -->
	   <property name="defaultContentType" value="text/html" />   
	    
	   <property name="mediaTypes">    
	    <map>     
	     <entry key="json" value="application/json" />      
	     <entry key="xml" value="application/xml" />      
	    </map>    
	   </property>   
	   <property name="viewResolvers">
	   		<list>
	   			<bean id="jspViewResolver"  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	   				 <property name="prefix" value="/WEB-INF/jsp/" />  
			         <property name="suffix" value=".jsp" />  
			         <property name="contentType" value="text/html;charset=UTF-8" />  
			         <property name="order" value="2"></property>
	   			</bean>
	   			<bean id="freemarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
				    <property name="prefix" value=""/>
				    <property name="order" value="1"></property>
				    <property name="suffix" value=".html"/>
				    <property name="requestContextAttribute" value="rc" />
				    <property name="contentType" value="text/html; charset=UTF-8"/>
				</bean>
   			</list>
	   </property>
	  <!-- 默认使用MappingJacksonJsonView生成jsonview-->
	  <property name="defaultViews">    
	    <list>     
	     <bean  class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">        
	         <property  name="extractValueFromSingleKeyModel" value="true" />     
	      </bean>        
	     </list>     
	    </property>  
	 </bean>
	
	
 	<!--  
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix" value=".html" />
		<property name="contentType" value="text/html;charset=UTF-8"></property>
		<property name="requestContextAttribute" value="rc" />
	</bean>
	-->
	<!-- 解决Spring MVC使用@ResponseBody的中文乱码问题  -->
	<mvc:annotation-driven> 
        <mvc:message-converters register-defaults="true"> 
            <bean class="com.essential.common.utils.UTF8StringHttpMessageConverter"/> 
        </mvc:message-converters> 
    </mvc:annotation-driven>

	<!-- 定义无需Controller的url<->view直接映射 -->
	<!--  
	<mvc:view-controller path="/" view-name="redirect:/login.do"/>
	-->
	
	<!-- 让springmvc支持文件上传 -->
	 <bean id="multipartResolver" class="com.essential.common.utils.MyMutipartResolver">
    	<property name="maxInMemorySize" value="2048"></property>
    	<property name="maxUploadSize" value="1000000000"/>
    </bean> 
</beans>